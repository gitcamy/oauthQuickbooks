// Apply plugins using the plugins DSL
plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'org.springframework.boot' version '3.2.4' // Adjust to the latest compatible version
    id 'io.spring.dependency-management' version '1.0.11.RELEASE' // Specify the version
}

group = 'com.example'
version = '0.1.0'
sourceCompatibility = '21' // Update Java version as needed
targetCompatibility = '21' // Update Java version as needed

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.codehaus.jackson:jackson-core-asl:1.9.13'
    implementation 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    implementation 'org.springframework.data:spring-data-rest-webmvc'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'commons-lang:commons-lang:2.6'
    implementation 'org.apache.httpcomponents:httpcore'
    implementation 'org.apache.httpcomponents:httpclient:4.1.2'
    implementation 'log4j:log4j:1.2.17'
    implementation 'ant:ant:1.7.0'
    implementation 'org.json:json:20180813'
}

// Spring Boot's plugin already configures a task for creating an executable jar.
// If you need further customization, you can adjust the bootJar task accordingly.

// The wrapper task is configured to ensure Gradle Wrapper uses a specific version.
wrapper {
    gradleVersion = '8.6' // Update to the Gradle version you're aligning with
}
